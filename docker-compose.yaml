version: "3.9"

services:
  postgres:
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_DB: chatwoot_production
      POSTGRES_USER: chatwoot
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U chatwoot -d chatwoot_production"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"]
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  chatwoot-web:
    image: ghcr.io/chatwoot/chatwoot:latest
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file: .env
    environment:
      RAILS_ENV: production
      NODE_ENV: production
    ports:
      - "3000:3000"
    volumes:
      - storage:/app/storage

  chatwoot-worker:
    image: ghcr.io/chatwoot/chatwoot:latest
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: bundle exec sidekiq -C config/sidekiq.yml
    env_file: .env
    environment:
      RAILS_ENV: production
      NODE_ENV: production
    volumes:
      - storage:/app/storage

volumes:
  postgres-data:
  redis-data:
  storage:
